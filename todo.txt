Immediate goals:
Continue new setup for messsage building.
  Speech and Gesture items are given their own classes and tables with a property to sort by when they are combined.
  Need a single relationship that returns both.
  GestureComponents will store actor, owner, and the name of the target, as well as information on whether or not the owner IS the target.
  Both components will return the correct output for a supplied viewer.
  need to delate old messagecomponent stuff
  need to add new speech table, probably fix gesture table
  set up polymorphic relationship



Gesture Targeting
  Add backend processing for submitting targeted gestures
  Include a number of gesture-only options, such as body parts.
Add more gestures - Look at, shake fist, scowl, stick out tongue, growl
Expand gesture implementation
  Assign a "doer" to each message component.
  Have gestures have variations for how the action is seen by the doer and how its seen by others.
  Have speeches be described as "You say" or "(name) says" as appropriate.
Multiple Language Support
  Creation/Investigation of new languages
    - From pondering gestures or language, the player should always get a unique language idea to investigate
  Autonaming of new languages (for now some unique hash is fine)
  Tracking languages moving from player to player
  Binding actual language variants to the world somehow - are variants already worldbound?
Allow players to choose language for text boxes
  Messages in a language players do not understand are converted to nonsense
  Players should have a default language for these text boxes
  Once a text box language has changed, the selected language becomes the new default for this page
Add a character settings page where characters can change their default language
Allow players to delete elements from unsubmitted messages

Create "Cooking" knowledge based on pondering Fire, which grants the "cook" action (1ap). This sacrifices a Dolait to turn a basic food into a "Meal" which restores some happiness in addition to restoring the same amount of nutrition as the previous item. Meals execute to "spoil" at the end of turn and get destroyed.
Remove display of duplicates in the ponder screen (Harder than it looks, since right now ponder is processed against content_possessions...)
Async changes to character stats as the result of conditions and actions - track temporary values, and then commit them (only then comparing to things like max or min possible values) only at the end of the execution run.
Add requirements for thoughts. Example: You can only come up with the idea to craft toys if you ponder weariness AFTER you've researched the basics of crafting.
Actions should return a full "status" object, with messages to pass, success or failure, an id for what happened. This will allow for historical comparison (actions that only work if another action is used this turn), and the refunding of AP for an aborted action (trying to use an item that is stolen for example).
Change the queue to only spend at *end* of turn until down to zero, instead of at beginning.

PVE/Gamification
Introduce the "events" system. Events are things that can happen each day. Some events are good - perfect weather might result in a bountiful harvest, for example. Others are bad, like disease or if the group has attracted a pack of wild predators, and may required coordinated effort to overcome.

-Introduce the "predator pack".
Every cycle change, implement a chance for a "A group of predators has arrived" event to occur, otherwise "Nothing of note happens." When the event occurs, log it.
This event creates a "world condition", that can be viewed in the world status box, and persists indefinitely. The predators arriving event cannot occur while this condition is active.
This condition unlocks a new action "fight off predators".
While active, this condition randomly damages a player for 2 to 6 damage each round.
This condition also tracks and displays the packs current target, a random player. It has an 80% chance to deal it's damage to the targeted player instead of any other player. If the player is killed, a new target is immediately randomly selected.
The predator condition is given a duration attribute "predator health", that is reduced when players choose the fight off predators action and by a slight amount each turn, and by a large amount if they successfully kill a player.
When this attribute reaches zero or lower, the condition ends and the log receives a message that the predators have departed.

--TRADING--
Restrict the amount of knowledge a player requires of the target. Players can only request lessons in something they have an idea about, and can request things the other player doesn't know, as well as offer to teach things the other player doesn't need to learn. Items for now will still be public, but lessons should probably be worked out via communication. Simply getting an offer for a specific knowledge, however, should give the player the "idea" that they can learn it, allowing them to make a counter-offer for that knowledge.

Additionally, we need some way to indicate when a trade proposal element becomes impossible without cancelling the trade. If the person offering offers a knowledge the target knows, or an item they no longer possess, the recipient should be able to see that - but accept anyway. If the recipient lacks a knowledge or item requested, they should not be able to accept but they should be able to see what they are missing, go and get that thing and THEN accept.

Allow players to quickly create "counter-offers", where the current offer is cancelled/denied, and they are pushed to the page to create a new offer with all the current offer elements already selected on it with the same amounts, so they merely need to adjust the offer rather than completely recreating it.
---/TRADING--

--REFACTOR BREAK--
Actions stuff:
 Improve the "impossible" results and item requirement checking logic, track the actual items that are missing for the building of more effective lack of requirement messages.
 Implement a general lack of requirements message instead of having each action define it's own, though the action should still probably contribute a unique component. This is so we can have a complex "list all items and other things missing and the amounts that were required" sort of thing without complex message logic in the action definition.
--/REFACTOR BREAK--

--CONTENT BREAK--
???Forage requires wildlands to forage in, target_allowed stuff would need to work first though
??Add explore result that results in a concussion and the loss of a knowledge - Should wait until things can be taught!
--CONTENT BREAK--

-Trade Expansion
  Add the requirement for both parties to "accept" an offer.
  Add the ability for players to edit an existing trade offer. This should reset acceptance status for both players.
  Make sure to add a check to prevent a player's accept from succeeding against an offer that has been updated since they last viewed it. Display a message saying the offer could not be accepted as it has changed.
  Add the ability to fill an offer automatically from items of the right type, or to choose [i]specifically[/i] which item is offered, and the ability to see it's details (condition, uses remaining, etc.). You can not fill in specific items for the other party, only for yourself.

Add a "target_allowed" flag that works like target required, but with a default option specified, usually "Any Available" or "None"
Have hunger actually require a certain amount of "nutrition" each turn, and food provides an amount based on the level of it's food quality. Eating reduces this value until it reaches zero and then removes the condition.
Replace the "play with toy" action with a "use item" action, that can generically target any item with a "use" action defined.
Multiply all vigor costs and values by 10, to allow for finer calculation in cost bonuses. Especially for cheaper items, it's getting hard to balance...

--FAR FUTURE--
Add a way for players to "spy on" other players and intercept their messages.
More robust system for handling crafting. Introduce item qualities, have quality degrade from use. Have items break if used at low quality. Have learning to craft actions result in a prototype, and require materials.
Allow creation of language variants. Players can create custom langauges (and know multiple languages) but only communicate via text to those who know the same language (making a kind of game out of getting one language to dominate for ease of communication vs. the effort of learning a new language). Obviously, this will require teaching/learning to be implemented first.
Allow hiding items, and a config to hide new items be default. Also allow making them publicly viewable. Perhaps require the player to build a shack first?
Allow creation of broadcasts
Pull the item list from the worlds instead of from a global item list, and vary the resulting items, esp. qualities. Change the current item stuff to be templates rather than final definitions, with multiple options for various bits to build the real item base.
Have lots of variant wildlands with their own forage results, and have deposits be an attribute on wildlands. Deposits will be hidden until something something something.
Add remembered tasks. Make sure the task is remembered as a % of task completed.
"Strife", the knowledge of attacking other players, becomes a starting knowledge. Strife is a type of proposal that is automatically and immediately executed. The basic knowledge grants the "attack' proposal at a cost of 3ap(+10 from physical injury). The attacker has two 50% chances of dealing 1 damage to the defender, and the defender has one 50% chance of dealing 1 damage to the attacker. Attacking or being attacked by someone gives you the idea "brawling", which increases your odds when both attacking and defending to 75%.
Add the "craft weapon" knowledge and "weapon" item, made from tomatunk.
Considering another player gives several ideas depending. If they have possessions, you gain the idea of "theft", which allows you to try and steal items. If they are hurt, you gain the idea of "caretaking", which allows you to improve another player's healing for a turn.
Add a settting to allow players to turn off auto-eating and force-starve themselves.
Investigation knowledge model. Each "knowledge" is made up of several "pieces of the puzzle". Investigation offers several random selections from the pieces of the puzzle list and grants them to the player. When the player has all the pieces of the puzzle, they gain the knowledge. Players can share their pieces of the puzzle with other players. Earlier, basic knowledges may only have one piece to their puzzles.
Add random events each turn.
Allow players to destroy items they own.
Allow players to share "ideas" in the trade/teaching screen for free. Knowledges with zero components are also free when traded.
Major rewrite of property management. Properties are no longer items - they exist from the beginning of the game, and there exists a type of knowledge coupled with them. Any players that possesses this knowledge can use this property for whatever they want. Players may obviously make claims to the property in various ways - signs, choosing to physically patrol the property to prevent people from using, traps and fences, guard animals (or hiring other players as guards) or even simply verbally in chat, but ultimately "possessing" a property comes down to your ability to prevent others from using it. However, this means that you can *allow* others to use it, for example to farm and harvest 'your' land, in exchange for a portion of their crops. Exploration may give you "discoveries", realling a random unknown property to you, but that property may have already been discovered by another player - and if they are using it sparingly, you may not even realize you're discovery means you are trespassing on someone elses land!
Add constructions - fences and houses. Both reduce chance of items getting stolen.
Every player starts with knowledge of a few starting properties - The Machine, and The Commons, which starts as a wilderness area.
Properties should have physical locations. Exploring involves exploring specific unexplored (or already explored) sections of a map, and if you're the first to explore that area there might be additional surprises there for you (diseases, artifacts, etc.). Players have a physical presence at locations, and travel times to move from one location to another. Trades and communication and other player interactions (and actions that depend on specific properties) are only possible at locations the player is at. Exploring costs the vigor to move from your location to the one to be explored, as well as a point of vigor to actually conduct the exploration.
Every location can have one or several properties. Dolait groves for gathering dolait, scrublands for hunting and foraging in, fields for planting in, and marshland or badlands for prospecting for tomatunk and blasted lands for prospecting for wampoon - although who knows how much of each might actually be in those places. Dolait groves and scrublands will increase over time, reclamining fields. Clearing the land will turn parts of it back to field. Farmlands thus have different sizes, depending on the location and conditions.
Attach use actions to items.
Meat plants - have some "meat seeds" form harvestable fields, but instead of spoiling if unharvested it matures into monsters/wildlife.
Secondary and Ternary resource layers - once surface wampoon and tomatunk is depleted, players should have the option of digging down to extract more, at the expense of indefinitely ruining the terrain for other purposes. 
Mines might have a "stability" that is decreased every time they are used, but can be shored up by dolait supports, though this might end up as drudgery and not add anything.
Switch over to a more dynamic component based system - each world should get its own, unique list of associated items. These should be built, dynamically, with a component-style system. It should be *random* though... this will take a lot of design planning before its possible.
Consider the onboarding process - perhaps allow new players to join developed worlds, and allow them to communicate right off the bat? This will both maximize their opportunities to learn from other players, minimize some of the fundamental difficulties (as they'll start off with several useful techs)  and diminish their relative power (making them less likely to grief successfully). It might also be a good idea to have one very long lived 'training' world of some sort that guides them through the process of getting started...

Spread rumours of a "hidden" stat called "divine favour". A "low divine favour" can cause the character to be struck by meteors or lightning, or be more likely to be attacked by animals and such. In reality, this events will be manually controlled by moderators. 

Characters have the following stats yet to be implemented:
Happiness (happy)
Max Happiness (max_happy)
Traits: [hard worker, nimble fingers, keen eyes, sharp mind, pretty face, organized multitasker, big heart]

BUGLIST AND SECURITY CONCERNS:
Everything right now is handled by get requests, we should probably switch post request to... post requests.

    ...====''''''''''''''''''====...
........................................
=== Ultimate Plan - Playing the game ===
''''''''''''''''''''''''''''''''''''''''
A number of players are introduced to a new game. Their characters have lifespans - limited time in the world. The goals are not straightforward, but living as long as possible, advancing as much as possible, and building a thriving situation while holding off the forces that threaten to bring everything down are all common goals. Ultimately, instead of dying, a sufficiently advanced civilization can allow its citizens to "Transcend" - acquiring Transcendence tokens is one of the keys to success in the meta-game. Any account may only enter a world once, and only 5 characters from any world may ever Transcend. Once they have done so, no new souls will be able to enter that world.

Players can also be responsible for siring children, which is important if you want to acquire world lifespan bonuses. Additionally, any of your children that transcend also give you Transcendence tokens. However, you must raise them well enough to succeed, and if they aren't Adopted by another real player, they will come down with a condition called "failure to thrive" and wither away until they die.

One of the other goals players can choose to follow is awakening the machine. The machine is a mysterious object from which the first players were born, and once it is awakened it will sometimes speak to players in their dreams, giving them goals to strive for. The people can never truly understand what the machine is or why it exists, but those who earn its favour seem more likely to thrive in this hostile world. The players can also choose to research the machine, although this is risky - valuable secrets may be uncovered, but it may earn the machine's hostility, making the world a more dangerous place. The machine seeks to preserve itself, and it will not hesitate to wipe out a people that prove to be a threat to it - but it may the only way to unlock the machines deepest secrets, and these secrets may be carried forward by those who Transcend or those who Embark.

An alternative to Transcending is Embarking. This is an exit from the current world, with a chance of joining a new one at random, and will involve an ardous and dangerous journery through the in-between-lands. There are secrets to be discovered here as well, of course, and rare resources to acquire, But even a well prepared character has even odds of perishing during the trip, and it's one way - you can never go home. For a people that have Transcended its heroes or has dug too deeply into their machine, however, it is often the only choice aside from a slow death since all new children will fail to thrive. Multiple characters may embark together, in an event called a Migration, which will allow them to arrive at a new location together, along with their knowledge and any equipment that survived the journey.

Players who Transcend lose their body and equipment, with the ascending character effectively dying, but they can use their Transcendence tokens to strenthen their... soul, if you will. These benefits will carry over to all characters the player controls in the present and future. The benefits of Transendence tokens vary wildly, and the options available depend on the character and circumstances of the ascenscion.

Adoption allows a player to enter a world where the machine is no longer creating new bodies, by examining the children of appropriate age that are available and claiming one as their new body. Making a child attractive to adoption often involves caring for its health, teaching it well, and insuring it has good traits and equipment.

The average lifespan of a character is about 30 days real time, with a maximum of 60 with all Transcendance and technology boosts.
